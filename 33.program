import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_absolute_error, mean_squared_error, r2_score

data = {
    "engine_size": [1.6, 2.0, 2.5, 3.0, 3.5, 4.0, 4.5, 5.0, 5.5, 6.0],
    "horsepower": [100, 150, 180, 210, 250, 300, 350, 400, 450, 500],
    "fuel_efficiency": [30, 28, 25, 22, 20, 18, 15, 12, 10, 8],
    "price": [20000, 25000, 30000, 35000, 40000, 50000, 60000, 70000, 80000, 90000]
}

df = pd.DataFrame(data)
sns.pairplot(df)
plt.show()
# Select features and target variable
X = df[["engine_size", "horsepower", "fuel_efficiency"]]
y = df["price"]
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)
model = LinearRegression()
model.fit(X_train, y_train)

y_pred = model.predict(X_test)

# Evaluate model performance
mae = mean_absolute_error(y_test, y_pred)
mse = mean_squared_error(y_test, y_pred)
r2 = r2_score(y_test, y_pred)

print(f"Mean Absolute Error: {mae}")
print(f"Mean Squared Error: {mse}")
print(f"R-squared Score: {r2}")

plt.scatter(y_test, y_pred, label="Predicted vs Actual")
plt.xlabel("Actual Price ($)")
plt.ylabel("Predicted Price ($)")
plt.title("Linear Regression Model: Car Price Prediction")
plt.legend()
plt.show()
